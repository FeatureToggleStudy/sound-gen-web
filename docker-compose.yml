version: '3'
networks:
  sound_network:
    driver: bridge
services:

  client:
    hostname: client
    env_file: .env
    build:
      context: ./client
    restart: always
    volumes:
      - ./client:/code
      - /code/node_modules
    networks:
      - sound_network
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    expose:
      - "${CLIENT_PORT}"
    command: sh -c "npm run start"
    depends_on:
      - server
    links:
      - server

  server:
    hostname: server
    env_file: .env
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./server:/code
      - ./client/dist:/code/client
      - /code/node_modules
    depends_on:
      - mongodb
    networks:
      - sound_network
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    expose:
      - "${SERVER_PORT}"
    environment:
      WAIT_HOSTS: mongodb:${MONGO_PORT}
    command: sh -c "/wait && npm run start"
  
  mongodb:
    hostname: mongodb
    env_file: .env
    image: mongo
    restart: always
    networks:
      - sound_network
    logging:
      driver: none
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
