version: '3'
networks:
  sound_network:
    driver: bridge
services:

  client:
    hostname: client
    env_file: .env
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./client:/code
      - /code/node_modules
    networks:
      - sound_network
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    expose:
      - "${CLIENT_PORT}"
    command: sh -c "npm run dev"
    depends_on:
      - server
    links:
      - server

  server:
    hostname: server
    env_file: .env
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./server:/code
      - /code/node_modules
    networks:
      - sound_network
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    expose:
      - "${SERVER_PORT}"
    environment:
      WAIT_HOSTS: mongodb:${MONGO_PORT}
    command: sh -c "npm run dev"
    # depends_on:
    #   - mongodb
    # command: sh -c "/wait && npm run dev"
  
  # mongodb:
  #   hostname: mongodb
  #   env_file: .env
  #   image: mongo
  #   restart: always
  #   networks:
  #     - sound_network
  #   logging:
  #     driver: none
  #   ports:
  #     - ${MONGO_PORT}:${MONGO_PORT}

  generate-sound:
    build:
      context: ./models/n-synth
      args: 
        TENSORFLOW_IMAGE: tensorflow/tensorflow:1.13.1-py3
        COMPUTE_TYPE: cpu
        COMPUTE_ENVIRONMENT: paperspace
    volumes:
      - ./models/n-synth/artifacts:/code/artifacts
    networks:
      - sound_network
    ports:
     - "80:4000"
    tty: true
    command: sh -c "python generate.py"
